@using Microsoft.AspNetCore.Html
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <title>Control Panel | @ViewData["SiteName"]</title>
        <script src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js"></script>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.6/dist/semantic.min.css">
        <script src="https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.6/dist/semantic.min.js"></script>
        <script src="/Content/monaco-editor/min/vs/loader.js"></script>
        <style>
            body {
                margin: 14px;
                /*margin-right: 14px;*/
            }
            .ui.file.input {
                display: none;
            }
            .json.ui.modal > .content {
                display: flex;
                flex-direction: column;
            }
            
            .json.ui.modal > .content > div:last-child {
                flex: 1;
            }
            
            .sql.ui.modal > .content {
                display: flex;
                flex-direction: column;
            }
                        
            .sql.ui.modal > .content > #sqlconsole {
                flex: 1 1 1px;
                overflow: auto;
            }
        </style>
        <script>
            var numberOfTablesAppended = 0;
        
            function decodeHtml(html) {
                var txt = document.createElement("textarea");
                txt.innerHTML = html;
                return txt.value;
            }
            function encodeHtml(input) {
                return $('<span>').text(input).html();
            }
            $( document ).ready(function() {
                $('.dropdown').dropdown();
            });
            
            // Builds the HTML Table out of myList.
            function buildHtmlTable(selector, inputList) {
                var columns = addAllColumnHeaders(inputList, selector);
                for (var i = 0; i < inputList.length; i++) {
                    var row$ = $('<tr/>');
                    for (var colIndex = 0; colIndex < columns.length; colIndex++) {
                        var cellValue = inputList[i][columns[colIndex]];
                        if (cellValue == null) cellValue = "";
                        row$.append($('<td/>').html(encodeHtml(cellValue)));
                    }
                    $(selector).append(row$);
                }
            }
            
            // Adds a header row to the table and returns the set of columns.
            // Need to do union of keys from all records as some records may not contain
            // all records.
            function addAllColumnHeaders(myList, selector) {
                var columnSet = [];
                var headerTr$ = $('<tr/>');
                for (var i = 0; i < myList.length; i++) {
                    var rowHash = myList[i];
                    for (var key in rowHash) {
                        if ($.inArray(key, columnSet) == -1) {
                            columnSet.push(key);
                            headerTr$.append($('<th/>').html(encodeHtml(key)));
                        }
                    }
                }
                $(selector).append($('<thead></thead>').append(headerTr$));
                return columnSet;
            }
            
            function submitSQLQuery() {
                var token = $('input[name="__RequestVerificationToken"]').val();
                var myData = { query: $('#sqlquery').val() };
                var dataWithAntiforgeryToken = $.extend(myData, { '__RequestVerificationToken': token });
                
                $.ajax({
                    url: "/Admin/RunSqlQuery",
                    type: "POST",
                    data: dataWithAntiforgeryToken,
                    success: function(data) {
                        var jsonData = JSON.parse(data);
                        //$('#sqlconsole').append($(buildHtmlTable(jsonData)));
                        $('#sqlconsole').append($('<code id=SQLQuery' + numberOfTablesAppended + '>' + encodeHtml('> ' + $('#sqlquery').val()) + '</code>'));
                        $('#sqlconsole').append($('<table class="ui celled table" id="SQLTable' + numberOfTablesAppended + '"></table>'));
                        buildHtmlTable('#SQLTable' + numberOfTablesAppended, jsonData);
                        if(numberOfTablesAppended > 0) {
                            document.getElementById('SQLQuery' + numberOfTablesAppended).scrollIntoView();
                        }
                        $('#sqlquery').val("");
                        numberOfTablesAppended = numberOfTablesAppended + 1;
                        //$('#sqlconsole').text(data);
                    },
                    error: function() {
                        alert("Error running SQL query.");
                    }
                });
            }
        </script>
    </head>
    <body>
        <script>
            var editor;
            var evAdded = false;
            function openAppSettingsEditor() {
                $('.json.overlay.fullscreen.modal').modal('setting', {
                    onDeny: function() {
                        editor.dispose();
                    }
                }).modal('show');
                require.config({ paths: { 'vs': '/Content/monaco-editor/min/vs' } });
                require(['vs/editor/editor.main'], function () {
                    editor = monaco.editor.create(document.getElementById('monacoContainerAppSettings'), {
                        value: decodeHtml("@ViewData["AppSettingsJson"]"),
                        language: 'json'
                    });
                });
            }
            function openSQLConsole() {
                $('.sql.overlay.fullscreen.modal').modal('show');
                // Get the input field
                var input = document.getElementById("sqlquery");
                
                // Execute a function when the user releases a key on the keyboard
                if(!evAdded) {
                    input.addEventListener("keyup", function(event) {
                      // Number 13 is the "Enter" key on the keyboard
                      if (event.keyCode === 13) {
                        // Cancel the default action, if needed
                        event.preventDefault();
                        // Trigger the button element with a click
                        document.getElementById("sqlsubmit").click();
                      }
                    });
                    evAdded = true;
                }
            }
            $(document).ready(function () {
                $('#editAppSettings').submit(function (event) {
                    $('#newValue').val(editor.getValue());
                    return true; // return false to cancel form action
                });
            });
        </script>
        <partial name="_Navbar" />
        <div id="customContent">
            <div class="ui header">
                Control Panel
            </div>
            @if ((bool) ViewData["RestartShow"]) {
                <div class="ui message">
                    <div class="header">
                        Restarting @ViewData["SoftwareName"]...
                    </div>
                    <p>Please wait for the process to restart. </p>
                </div>
            }
            <div class="ui compact segment">
                <div class="ui small header">
                    Empty Garbage
                </div>
                <p>This will delete all files in the folder <code>/Content/garbage</code>. Please make sure you don't need any of those files before deleting them.</p>
                <form action="/Admin/ClearGarbageForm" method="post">
                    <button type="submit" class="red ui button">Empty Garbage</button>
                </form>
            </div>
            <div class="ui compact segment">
                <div class="ui small header">
                    Register New User
                </div>
                <p>Type in the email address of the person who you want to register. They will get an email with a link to allow them to access the register page.</p>
                <form class="ui form" id="registerUserForm" action="/Admin/RegisterUserForm" method="post">
                    <div class="ui field">
                        <label>Email</label>
                        <input type="email" name="registerEmail" placeholder="user@example.com"/>
                    </div>
                    <button type="submit" class="ui button">Send email</button>
                </form>
            </div>
            <div class="ui compact segment">
                <div class="ui small header">
                    Change favicon
                </div>
                <p>Current favicon:</p>
                <img class="ui image" src="/favicon.ico" alt="Current favicon"/>
                <br/>
                <form id="uploadFaviconForm" action="/Admin/UploadFavicon" method="post" enctype="multipart/form-data">
                    <label for="postedFile" class="ui labeled icon button">
                        <i class="file icon"></i>
                        Upload favicon
                    </label>
                    <input type="file" id="postedFile" name="postedFile" class="ui file input" onchange="form.submit()">
                </form>
            </div>
            <div class="ui compact segment">
                <div class="ui small header">
                    SQL console
                </div>
                <p>Open a SQL console to send commands directly to the database and see the response.</p>
                <div onclick="openSQLConsole()" class="ui button">Launch SQL console</div>
            </div>
            <div class="ui compact segment">
                <div class="ui small header">
                    Other settings
                </div>
                <p>There are other settings in the <code>appsettings.json</code> file in the "webweb" folder on the server.</p>
                <div onclick="openAppSettingsEditor()" class="ui labeled icon button"><i class="code icon"></i>Launch editor</div>
            </div>
        </div>
        <div class="ui divider"></div>
        <span id="version" class="ui small grey text">Powered by @ViewData["SoftwareName"] @ViewData["VersionNumber"]</span>
        <form id="editAppSettings" action="/Admin/EditAppSettings" method="post">
            <input type="hidden" name="newValue" id="newValue" />
        </form>
        <div class="json ui overlay fullscreen modal">
            <div class="header">
                Editing appsettings.json
            </div>
            <div class="content">
                <div class="ui warning message">
                    <div class="header">
                        Be careful
                    </div>
                    Modifying some of these values can break @ViewData["SoftwareName"]. Please be sure you want to change a value before clicking "Save".
                </div>
                <div id="monacoContainerAppSettings"></div>
            </div>
            <div class="actions">
                <button type="submit" form="editAppSettings" class="ui approve button">Save and restart @ViewData["SoftwareName"]</button>
                <div class="ui cancel button">Cancel</div>
              </div>
        </div>
        <div class="sql ui overlay fullscreen modal">
            <div class="header">
                SQL console
            </div>
            <div class="content">
                <div class="ui warning message">
                    <div class="header">
                        Be careful
                    </div>
                    You can break the app by modifying some of the tables. 
                </div>
                <div class="ui top attached segment" id="sqlconsole">
                </div>
                <div class="ui bottom attached segment" id="sqlinput">
                    <div class="ui fluid action input">
                        @Html.AntiForgeryToken()
                        <input id="sqlquery" type="text" placeholder="Enter SQL query...">
                        <button id="sqlsubmit" class="ui button" onclick="submitSQLQuery()">Submit</button>
                    </div>
                </div>
            </div>
            <div class="actions">
                <div class="ui approve button">Close</div>
            </div>
        </div>
    </body>
</html>




